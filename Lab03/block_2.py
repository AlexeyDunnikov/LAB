import os
import subprocess
import platform

def open_file(filename):
    try:
        subprocess.call(["xdg-open", filename])
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞: {e}")

def show_file(filename):
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            print(f.read())
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")

def list_directory(path):
    if os.path.isdir(path):
        print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ '{path}':")
        for item in os.listdir(path):
            print("üìÅ" if os.path.isdir(os.path.join(path, item)) else "üìÑ", item)
    else:
        print("–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

def create_file(path):
    try:
        with open(path, 'w', encoding='utf-8') as f:
            pass
        print(f"–§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {path}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")

def create_directory(path):
    try:
        os.makedirs(path)
        print(f"–ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {path}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏: {e}")


print("–§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É (–∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
while True:
    command = input("> ").strip()
    if not command:
        continue

    parts = command.split(maxsplit=1)
    cmd = parts[0]

    if cmd == "exit":
        break
    elif cmd == "open" and len(parts) == 2:
        open_file(parts[1])
    elif cmd == "show" and len(parts) == 2:
        show_file(parts[1])
    elif cmd == "list" and len(parts) == 2:
        list_directory(parts[1])
    elif cmd == "create_file" and len(parts) == 2:
        create_file(parts[1])
    elif cmd == "create_dir" and len(parts) == 2:
        create_directory(parts[1])
    else:
        print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–ª–∏ –Ω–µ–ø–æ–ª–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–¥–¥–µ—Ä–∂–∫–∞: open, show, list, create_file, create_dir, exit.")